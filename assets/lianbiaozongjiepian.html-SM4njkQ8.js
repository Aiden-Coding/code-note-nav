import{_ as a,r as l,o as h,c as s,a as e,b as r,d as o,e as n}from"./app-pMbPEaNl.js";const E={},i=e("h1",{id:"链表总结篇",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链表总结篇","aria-hidden":"true"},"#"),r(" 链表总结篇")],-1),c=e("h2",{id:"链表的理论基础",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链表的理论基础","aria-hidden":"true"},"#"),r(" 链表的理论基础")],-1),_={href:"https://programmercarl.com/%E9%93%BE%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer"},d=n('<ul><li>链表的种类主要为：单链表，双链表，循环链表</li><li>链表的存储方式：链表的节点在内存中是分散存储的，通过指针连在一起。</li><li>链表是如何进行增删改查的。</li><li>数组和链表在不同场景下的性能分析。</li></ul><p><strong>可以说把链表基础的知识都概括了，但又不像教科书那样的繁琐</strong>。</p><h2 id="链表经典题目" tabindex="-1"><a class="header-anchor" href="#链表经典题目" aria-hidden="true">#</a> 链表经典题目</h2><h3 id="虚拟头结点" tabindex="-1"><a class="header-anchor" href="#虚拟头结点" aria-hidden="true">#</a> 虚拟头结点</h3>',4),p={href:"https://programmercarl.com/0203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0.html",target:"_blank",rel:"noopener noreferrer"},A=e("p",null,"链表的一大问题就是操作当前节点必须要找前一个节点才能操作。这就造成了，头结点的尴尬，因为头结点没有前一个节点了。",-1),m=e("p",null,[e("strong",null,"每次对应头结点的情况都要单独处理，所以使用虚拟头结点的技巧，就可以解决这个问题"),r("。")],-1),B={href:"https://programmercarl.com/0203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0.html",target:"_blank",rel:"noopener noreferrer"},f=e("h3",{id:"链表的基本操作",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链表的基本操作","aria-hidden":"true"},"#"),r(" 链表的基本操作")],-1),u={href:"https://programmercarl.com/0707.%E8%AE%BE%E8%AE%A1%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},g=n('<p>这是练习链表基础操作的非常好的一道题目，考察了：</p><ul><li>获取链表第index个节点的数值</li><li>在链表的最前面插入一个节点</li><li>在链表的最后面插入一个节点</li><li>在链表第index个节点前面插入一个节点</li><li>删除链表的第index个节点的数值</li></ul><p><strong>可以说把这道题目做了，链表基本操作就OK了，再也不用担心链表增删改查整不明白了</strong>。</p><p>这里我依然使用了虚拟头结点的技巧，大家复习的时候，可以去看一下代码。</p><h3 id="反转链表" tabindex="-1"><a class="header-anchor" href="#反转链表" aria-hidden="true">#</a> 反转链表</h3>',5),b={href:"https://programmercarl.com/0206.%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,"因为反转链表的代码相对简单，有的同学可能直接背下来了，但一写还是容易出问题。",-1),x=e("p",null,"反转链表是面试中高频题目，很考察面试者对链表操作的熟练程度。",-1),N={href:"https://programmercarl.com/0206.%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},F=e("p",null,"建议大家先学透迭代法，然后再看递归法，因为递归法比较绕，如果迭代还写不明白，递归基本也写不明白了。",-1),C=e("p",null,[e("strong",null,"可以先通过迭代法，彻底弄清楚链表反转的过程！")],-1),D=e("h3",{id:"删除倒数第n个节点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#删除倒数第n个节点","aria-hidden":"true"},"#"),r(" 删除倒数第N个节点")],-1),I={href:"https://programmercarl.com/0019.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9.html",target:"_blank",rel:"noopener noreferrer"},V=e("h3",{id:"链表相交",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链表相交","aria-hidden":"true"},"#"),r(" 链表相交")],-1),v={href:"https://programmercarl.com/%E9%9D%A2%E8%AF%95%E9%A2%9802.07.%E9%93%BE%E8%A1%A8%E7%9B%B8%E4%BA%A4.html",target:"_blank",rel:"noopener noreferrer"},z=e("h3",{id:"环形链表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#环形链表","aria-hidden":"true"},"#"),r(" 环形链表")],-1),j={href:"https://programmercarl.com/0142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.html",target:"_blank",rel:"noopener noreferrer"},q=e("p",null,"这道题目可以说是链表的比较难的题目了。 但代码却十分简洁，主要在于一些数学证明。",-1),w=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),r(" 总结")],-1),L=e("p",null,[e("img",{src:"https://code-thinking-1253855093.file.myqcloud.com/pics/链表总结.png",alt:""})],-1),y={href:"https://programmercarl.com/other/kstar.html",target:"_blank",rel:"noopener noreferrer"},K={href:"https://wx.zsxq.com/dweb2/index/footprint/844412858822412",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,"考察链表的操作其实就是考察指针的操作，是面试中的常见类型。",-1),S={href:"https://programmercarl.com/0203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://programmercarl.com/%E9%93%BE%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer"},G={href:"https://programmercarl.com/0203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0.html",target:"_blank",rel:"noopener noreferrer"},H={href:"https://programmercarl.com/0707.%E8%AE%BE%E8%AE%A1%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},J={href:"https://programmercarl.com/0206.%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8.html",target:"_blank",rel:"noopener noreferrer"},M={href:"https://programmercarl.com/0019.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9.html",target:"_blank",rel:"noopener noreferrer"},P={href:"https://programmercarl.com/%E9%9D%A2%E8%AF%95%E9%A2%9802.07.%E9%93%BE%E8%A1%A8%E7%9B%B8%E4%BA%A4.html",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://programmercarl.com/0142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.html",target:"_blank",rel:"noopener noreferrer"};function R(U,W){const t=l("ExternalLinkIcon");return h(),s("div",null,[i,c,e("p",null,[r("在这篇文章"),e("a",_,[r("关于链表，你该了解这些！"),o(t)]),r("中，介绍了如下几点：")]),d,e("p",null,[r("在"),e("a",p,[r("链表：听说用虚拟头节点会方便很多？"),o(t)]),r("中，我们讲解了链表操作中一个非常总要的技巧：虚拟头节点。")]),A,m,e("p",null,[r("在"),e("a",B,[r("链表：听说用虚拟头节点会方便很多？"),o(t)]),r("中，我给出了用虚拟头结点和没用虚拟头结点的代码，大家对比一下就会发现，使用虚拟头结点的好处。")]),f,e("p",null,[r("在"),e("a",u,[r("链表：一道题目考察了常见的五个操作！"),o(t)]),r("中，我们通设计链表把链表常见的五个操作练习了一遍。")]),g,e("p",null,[r("在"),e("a",b,[r("链表：听说过两天反转链表又写不出来了？"),o(t)]),r("中，讲解了如何反转链表。")]),k,x,e("p",null,[r("我在"),e("a",N,[r("文章"),o(t)]),r("中，给出了两种反转的方式，迭代法和递归法。")]),F,C,D,e("p",null,[r("在"),e("a",I,[r("链表：删除链表倒数第N个节点，怎么删？"),o(t)]),r("中我们结合虚拟头结点 和 双指针法来移除链表倒数第N个节点。")]),V,e("p",null,[e("a",v,[r("链表：链表相交"),o(t)]),r("使用双指针来找到两个链表的交点（引用完全相同，即：内存地址完全相同的交点）")]),z,e("p",null,[r("在"),e("a",j,[r("链表：环找到了，那入口呢？"),o(t)]),r("中，讲解了在链表如何找环，以及如何找环的入口位置。")]),q,w,L,e("p",null,[r("这个图是 "),e("a",y,[r("代码随想录知识星球"),o(t)]),r(" 成员："),e("a",K,[r("海螺人"),o(t)]),r("，所画，总结的非常好，分享给大家。")]),O,e("p",null,[r("链表篇中开头介绍"),e("a",S,[r("链表理论知识"),o(t)]),r("，然后分别通过经典题目介绍了如下知识点：")]),e("ol",null,[e("li",null,[e("a",T,[r("关于链表，你该了解这些！"),o(t)])]),e("li",null,[e("a",G,[r("虚拟头结点的技巧"),o(t)])]),e("li",null,[e("a",H,[r("链表的增删改查"),o(t)])]),e("li",null,[e("a",J,[r("反转一个链表"),o(t)])]),e("li",null,[e("a",M,[r("删除倒数第N个节点"),o(t)])]),e("li",null,[e("a",P,[r("链表相交"),o(t)])]),e("li",null,[e("a",Q,[r("有否环形，以及环的入口"),o(t)])])])])}const Y=a(E,[["render",R],["__file","lianbiaozongjiepian.html.vue"]]);export{Y as default};
