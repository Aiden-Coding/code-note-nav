import{_ as e,r as p,o as l,c as o,a,b as s,d as t,e as c}from"./app-pMbPEaNl.js";const i="/code-note-nav/assets/image-20191208204118932-NhPFWjBh.png",u={},r=c('<h1 id="构建工具" tabindex="-1"><a class="header-anchor" href="#构建工具" aria-hidden="true">#</a> 构建工具</h1><h2 id="一、构建工具的作用" tabindex="-1"><a class="header-anchor" href="#一、构建工具的作用" aria-hidden="true">#</a> 一、构建工具的作用</h2><p>构建一个项目通常包含了依赖管理、测试、编译、打包、发布等流程，构建工具可以自动化进行这些操作，从而为我们减少这些繁琐的工作。</p><p>其中构建工具提供的依赖管理能够可以自动处理依赖关系。例如一个项目需要用到依赖 A，A 又依赖于 B，那么构建工具就能帮我们导入 B，而不需要我们手动去寻找并导入。</p><p>在 Java 项目中，打包流程通常是将项目打包成 Jar 包。在没有构建工具的情况下，我们需要使用命令行工具或者 IDE 手动打包。而发布流程通常是将 Jar 包上传到服务器上。</p><h2 id="二、java-主流构建工具" tabindex="-1"><a class="header-anchor" href="#二、java-主流构建工具" aria-hidden="true">#</a> 二、Java 主流构建工具</h2><p>Ant 具有编译、测试和打包功能，其后出现的 Maven 在 Ant 的功能基础上又新增了依赖管理功能，而最新的 Gradle 又在 Maven 的功能基础上新增了对 Groovy 语言的支持。</p><p><img src="'+i+`" alt="image-20220324093855618"></p><p>Gradle 和 Maven 的区别是，它使用 Groovy 这种特定领域语言（DSL）来管理构建脚本，而不再使用 XML 这种标记性语言。因为项目如果庞大的话，XML 很容易就变得臃肿。</p><p>例如要在项目中引入 Junit，Maven 的代码如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
 
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>jizg.study.maven.hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hello-first<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>

   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而 Gradle 只需要几行代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>dependencies <span class="token punctuation">{</span>
    testCompile <span class="token string">&quot;junit:junit:4.10&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、maven" tabindex="-1"><a class="header-anchor" href="#三、maven" aria-hidden="true">#</a> 三、Maven</h2><h3 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h3><p>提供了项目对象模型（POM）文件来管理项目的构建。</p><h3 id="仓库" tabindex="-1"><a class="header-anchor" href="#仓库" aria-hidden="true">#</a> 仓库</h3><p>仓库的搜索顺序为：本地仓库、中央仓库、远程仓库。</p><ul><li>本地仓库用来存储项目的依赖库；</li><li>中央仓库是下载依赖库的默认位置；</li><li>远程仓库，因为并非所有的依赖库都在中央仓库，或者中央仓库访问速度很慢，远程仓库是中央仓库的补充。</li></ul><h3 id="pom" tabindex="-1"><a class="header-anchor" href="#pom" aria-hidden="true">#</a> POM</h3><p>POM 代表项目对象模型，它是一个 XML 文件，保存在项目根目录的 pom.xml 文件中。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[groupId, artifactId, version, packaging, classifier] 称为一个项目的坐标，其中 groupId、artifactId、version 必须定义，packaging 可选（默认为 Jar），classifier 不能直接定义的，需要结合插件使用。</p><ul><li>groupId：项目组 Id，必须全球唯一；</li><li>artifactId：项目 Id，即项目名；</li><li>version：项目版本；</li><li>packaging：项目打包方式。</li></ul><h3 id="依赖原则" tabindex="-1"><a class="header-anchor" href="#依赖原则" aria-hidden="true">#</a> 依赖原则</h3><h4 id="_1-依赖路径最短优先原则" tabindex="-1"><a class="header-anchor" href="#_1-依赖路径最短优先原则" aria-hidden="true">#</a> 1. 依赖路径最短优先原则</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>A -&gt; B -&gt; C -&gt; X(1.0)
A -&gt; D -&gt; X(2.0)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 X(2.0) 路径最短，所以使用 X(2.0)。</p><h4 id="_2-声明顺序优先原则" tabindex="-1"><a class="header-anchor" href="#_2-声明顺序优先原则" aria-hidden="true">#</a> 2. 声明顺序优先原则</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>A -&gt; B -&gt; X(1.0)
A -&gt; C -&gt; X(2.0)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 POM 中最先声明的优先，上面的两个依赖如果先声明 B，那么最后使用 X(1.0)。</p><h4 id="_3-覆写优先原则" tabindex="-1"><a class="header-anchor" href="#_3-覆写优先原则" aria-hidden="true">#</a> 3. 覆写优先原则</h4><p>子 POM 内声明的依赖优先于父 POM 中声明的依赖。</p><h3 id="解决依赖冲突" tabindex="-1"><a class="header-anchor" href="#解决依赖冲突" aria-hidden="true">#</a> 解决依赖冲突</h3><p>找到 Maven 加载的 Jar 包版本，使用 <code>mvn dependency:tree</code> 查看依赖树，根据依赖原则来调整依赖在 POM 文件的声明顺序。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,36),d={href:"http://maven.apache.org/pom.html#Dependency_Version_Requirement_Specification",target:"_blank",rel:"noopener noreferrer"},g={href:"https://stackoverflow.com/questions/7249871/what-is-a-build-tool",target:"_blank",rel:"noopener noreferrer"},k={href:"https://programmingmitra.blogspot.com/2016/05/java-build-tools-comparisons-ant-vs.html",target:"_blank",rel:"noopener noreferrer"},v={href:"http://sagioto.github.io/maven2gradle/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.imooc.com/learn/833",target:"_blank",rel:"noopener noreferrer"};function m(b,f){const n=p("ExternalLinkIcon");return l(),o("div",null,[r,a("ul",null,[a("li",null,[a("a",d,[s("POM Reference"),t(n)])]),a("li",null,[a("a",g,[s("What is a build tool?"),t(n)])]),a("li",null,[a("a",k,[s("Java Build Tools Comparisons: Ant vs Maven vs Gradle"),t(n)])]),a("li",null,[a("a",v,[s("maven 2 gradle"),t(n)])]),a("li",null,[a("a",h,[s("新一代构建工具 gradle"),t(n)])])])])}const x=e(u,[["render",m],["__file","goujiangongju.html.vue"]]);export{x as default};
