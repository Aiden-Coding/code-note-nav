import{_ as n,r as l,o as a,c as s,a as e,b as r,d as t,e as h}from"./app-pMbPEaNl.js";const p={},E=h('<h1 id="听说背包问题很难-这篇总结篇来拯救你了" tabindex="-1"><a class="header-anchor" href="#听说背包问题很难-这篇总结篇来拯救你了" aria-hidden="true">#</a> 听说背包问题很难？ 这篇总结篇来拯救你了</h1><p>年前我们已经把背包问题都讲完了，那么现在我们要对背包问题进行总结一番。</p><p>背包问题是动态规划里的非常重要的一部分，所以我把背包问题单独总结一下，等动态规划专题更新完之后，我们还会在整体总结一波动态规划。</p><p>关于这几种常见的背包，其关系如下：</p><p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20230310000726.png" alt="416.分割等和子集1"></p><p>通过这个图，可以很清晰分清这几种常见背包之间的关系。</p><p>在讲解背包问题的时候，我们都是按照如下五部来逐步分析，相信大家也体会到，把这五部都搞透了，算是对动规来理解深入了。</p><ol><li>确定dp数组（dp table）以及下标的含义</li><li>确定递推公式</li><li>dp数组如何初始化</li><li>确定遍历顺序</li><li>举例推导dp数组</li></ol><p><strong>其实这五部里哪一步都很关键，但确定递推公式和确定遍历顺序都具有规律性和代表性，所以下面我从这两点来对背包问题做一做总结</strong>。</p><h2 id="背包递推公式" tabindex="-1"><a class="header-anchor" href="#背包递推公式" aria-hidden="true">#</a> 背包递推公式</h2><p>问能否能装满背包（或者最多装多少）：dp[j] = max(dp[j], dp[j - nums[i]] + nums[i]); ，对应题目如下：</p>',11),i={href:"https://programmercarl.com/0416.%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86.html",target:"_blank",rel:"noopener noreferrer"},c={href:"https://programmercarl.com/1049.%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8FII.html",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,"问装满背包有几种方法：dp[j] += dp[j - nums[i]] ，对应题目如下：",-1),d={href:"https://programmercarl.com/0494.%E7%9B%AE%E6%A0%87%E5%92%8C.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://programmercarl.com/0518.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2II.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://programmercarl.com/0377.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E2%85%A3.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://programmercarl.com/0070.%E7%88%AC%E6%A5%BC%E6%A2%AF%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E7%89%88%E6%9C%AC.html",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,"问背包装满最大价值：dp[j] = max(dp[j], dp[j - weight[i]] + value[i]); ，对应题目如下：",-1),A={href:"https://programmercarl.com/0474.%E4%B8%80%E5%92%8C%E9%9B%B6.html",target:"_blank",rel:"noopener noreferrer"},B=e("p",null,"问装满背包所有物品的最小个数：dp[j] = min(dp[j - coins[i]] + 1, dp[j]); ，对应题目如下：",-1),C={href:"https://programmercarl.com/0322.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://programmercarl.com/0279.%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"遍历顺序",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#遍历顺序","aria-hidden":"true"},"#"),r(" 遍历顺序")],-1),x=e("h3",{id:"_01背包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_01背包","aria-hidden":"true"},"#"),r(" 01背包")],-1),I={href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-2.html",target:"_blank",rel:"noopener noreferrer"},D=e("p",null,[e("strong",null,"一维dp数组的背包在遍历顺序上和二维dp数组实现的01背包其实是有很大差异的，大家需要注意！")],-1),F=e("h3",{id:"完全背包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#完全背包","aria-hidden":"true"},"#"),r(" 完全背包")],-1),q=e("p",null,"说完01背包，再看看完全背包。",-1),w={href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85.html",target:"_blank",rel:"noopener noreferrer"},N=e("p",null,"但是仅仅是纯完全背包的遍历顺序是这样的，题目稍有变化，两个for循环的先后顺序就不一样了。",-1),V=e("p",null,[e("strong",null,"如果求组合数就是外层for循环遍历物品，内层for遍历背包"),r("。")],-1),v=e("p",null,[e("strong",null,"如果求排列数就是外层for遍历背包，内层for循环遍历物品"),r("。")],-1),z=e("p",null,"相关题目如下：",-1),y={href:"https://programmercarl.com/0518.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2II.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://mp.weixin.qq.com/s/Iixw0nahJWQgbqVNk8k6gA",target:"_blank",rel:"noopener noreferrer"},J={href:"https://programmercarl.com/0070.%E7%88%AC%E6%A5%BC%E6%A2%AF%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E7%89%88%E6%9C%AC.html",target:"_blank",rel:"noopener noreferrer"},Q=e("p",null,"如果求最小数，那么两层for循环的先后顺序就无所谓了，相关题目如下：",-1),S={href:"https://programmercarl.com/0322.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://programmercarl.com/0279.%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0.html",target:"_blank",rel:"noopener noreferrer"},W=e("p",null,[e("strong",null,"对于背包问题，其实递推公式算是容易的，难是难在遍历顺序上，如果把遍历顺序搞透，才算是真正理解了"),r("。")],-1),G=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),r(" 总结")],-1),H=e("p",null,[e("strong",null,"这篇背包问题总结篇是对背包问题的高度概括，讲最关键的两部：递推公式和遍历顺序，结合力扣上的题目全都抽象出来了"),r("。")],-1),K=e("p",null,[e("strong",null,"而且每一个点，我都给出了对应的力扣题目"),r("。")],-1),M={href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85.html",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,"如果把我本篇总结出来的内容都掌握的话，可以说对背包问题理解的就很深刻了，用来对付面试中的背包问题绰绰有余！",-1),P=e("p",null,"背包问题总结：",-1),R=e("p",null,[e("img",{src:"https://code-thinking-1253855093.file.myqcloud.com/pics/背包问题1.jpeg",alt:""})],-1),U={href:"https://programmercarl.com/other/kstar.html",target:"_blank",rel:"noopener noreferrer"},X={href:"https://wx.zsxq.com/dweb2/index/footprint/844412858822412",target:"_blank",rel:"noopener noreferrer"};function Y(Z,$){const o=l("ExternalLinkIcon");return a(),s("div",null,[E,e("ul",null,[e("li",null,[e("a",i,[r("动态规划：416.分割等和子集"),t(o)])]),e("li",null,[e("a",c,[r("动态规划：1049.最后一块石头的重量 II"),t(o)])])]),_,e("ul",null,[e("li",null,[e("a",d,[r("动态规划：494.目标和"),t(o)])]),e("li",null,[e("a",m,[r("动态规划：518. 零钱兑换 II"),t(o)])]),e("li",null,[e("a",u,[r("动态规划：377.组合总和Ⅳ"),t(o)])]),e("li",null,[e("a",f,[r("动态规划：70. 爬楼梯进阶版（完全背包）"),t(o)])])]),g,e("ul",null,[e("li",null,[e("a",A,[r("动态规划：474.一和零"),t(o)])])]),B,e("ul",null,[e("li",null,[e("a",C,[r("动态规划：322.零钱兑换"),t(o)])]),e("li",null,[e("a",b,[r("动态规划：279.完全平方数"),t(o)])])]),k,x,e("p",null,[r("在"),e("a",I,[r("动态规划：关于01背包问题，你该了解这些！"),t(o)]),r("中我们讲解二维dp数组01背包先遍历物品还是先遍历背包都是可以的，且第二层for循环是从小到大遍历。")]),e("p",null,[r("和"),e("a",j,[r("动态规划：关于01背包问题，你该了解这些！（滚动数组）"),t(o)]),r("中，我们讲解一维dp数组01背包只能先遍历物品再遍历背包容量，且第二层for循环是从大到小遍历。")]),D,F,q,e("p",null,[r("在"),e("a",w,[r("动态规划：关于完全背包，你该了解这些！"),t(o)]),r("中，讲解了纯完全背包的一维dp数组实现，先遍历物品还是先遍历背包都是可以的，且第二层for循环是从小到大遍历。")]),N,V,v,z,e("ul",null,[e("li",null,[r("求组合数："),e("a",y,[r("动态规划：518.零钱兑换II"),t(o)])]),e("li",null,[r("求排列数："),e("a",L,[r("动态规划：377. 组合总和 Ⅳ"),t(o)]),r("、"),e("a",J,[r("动态规划：70. 爬楼梯进阶版（完全背包）"),t(o)])])]),Q,e("ul",null,[e("li",null,[r("求最小数："),e("a",S,[r("动态规划：322. 零钱兑换"),t(o)]),r("、"),e("a",T,[r("动态规划：279.完全平方数"),t(o)])])]),W,G,H,K,e("p",null,[r("最后如果你想了解多重背包，可以看这篇"),e("a",M,[r("动态规划：关于多重背包，你该了解这些！"),t(o)]),r("，力扣上还没有多重背包的题目，也不是面试考察的重点。")]),O,P,R,e("p",null,[r("这个图是 "),e("a",U,[r("代码随想录知识星球"),t(o)]),r(" 成员："),e("a",X,[r("海螺人"),t(o)]),r("，所画结的非常好，分享给大家。")])])}const re=n(p,[["render",Y],["__file","beibaozongjiepian.html.vue"]]);export{re as default};
